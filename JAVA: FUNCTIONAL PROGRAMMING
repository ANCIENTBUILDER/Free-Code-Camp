JAVA: FUNCTIONAL PROGRAMMING

Learn About Functional Programming:
const tea4TeamFCC = getTea(40);

Understand Functional Programming Terminology:
const tea4GreenTeamFCC = getTea(prepareGreenTea, 27);
const tea4BlackTeamFCC = getTea(prepareBlackTea, 13);

Understand the Hazards of Using Imperative Code:
  const tabsBeforeIndex = this.tabs.slice(0, index); // Get the tabs before the tab
  const tabsAfterIndex = this.tabs.slice(index + 1); // Get the tabs after the tab
  this.tabs = tabsBeforeIndex.concat(tabsAfterIndex); // Join them together

Avoid Mutations and Side Effects Using Functional Programming:
return fixedValue +1;

Pass Arguments to Avoid External Dependence in a Function:
function incrementer (valueToIncrement) {
  return valueToIncrement + 1;


