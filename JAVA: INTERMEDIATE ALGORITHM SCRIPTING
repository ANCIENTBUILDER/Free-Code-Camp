INTERMEDIATE ALGORITHM SCRIPTING

Sum All Numbers in a Range:
function sumAll(arr) {
  let minimumNumber = Math.min(arr[0], arr[1]);
  let maximumNumber = Math.max(arr[0], arr[1]);
  var result = 0;
    for (var i = minimumNumber; i <= maximumNumber; i += 1) {
      result += i;
  }
  return result;
}
sumAll([1, 4]);

Diff Two Arrays:
function diffArray(arr1, arr2) {
  const newArr = [];
    for (let i = 0; i < arr1.length; i += 1) {
      if (arr2.indexOf(arr1[i]) === -1) {
        newArr.push(arr1[i]);
      }
    }
  for (let j = 0; j < arr2.length; j += 1) {
    if(arr1.indexOf(arr2[j]) === -1) {
      newArr.push(arr2[j]);
    }
  }
  return newArr;
}
console.log(diffArray(["diorite", "andesite", "grass", "dirt", "pink wool", "dead shrub"], ["diorite", "andesite", "grass", "dirt", "dead shrub"]));

Seek and Destroy:
function destroyer(arr) {
  let survivingElements = [];
  let battleField = Object.values(arguments)[0];
  let elementsToDestroy = Object.values(arguments).splice(1);

  for (let i = 0; i < battleField.length; i += 1) {
    let positionToRecon = battleField[i];
    if (elementsToDestroy.indexOf(positionToRecon) === -1) {
      survivingElements.push(positionToRecon);
    }
  }
  return survivingElements;
}
let result = destroyer([1, 2, 3, 1, 2, 3], 2, 3);

Wherefore art thou:
function whatIsInAName(collection, source) {

}

whatIsInAName([{ first: "Romeo", last: "Montague" }, { first: "Mercutio", last: null }, { first: "Tybalt", last: "Capulet" }], { last: "Capulet" });
