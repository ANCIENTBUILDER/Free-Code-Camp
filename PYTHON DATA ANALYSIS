PYTHON DATA ANALYSIS 
Started March 05, 2023

Introduction to Data Analysis - Which of the following is not part of Data Analysis? --------------------------------------------------
Picking a desired conclusion for the analysis.

Data Analysis Example A - What does the shape of our dataframe tell us? ---------------------------------------------------------------
How many rows and columns our dataframe has.

Data Analysis Example B - What does the loc method allow you to do? -------------------------------------------------------------------
Access a group of rows and columns by supplying label(s) arguments.

How to use Jupyter Notebooks Intro - What is not allowed in a Jupyter Notebook's cell? ------------------------------------------------
An Excel sheet

Jupyter Notebooks Cells - What are the three main types of Jupyter Notebook Cell? -----------------------------------------------------
Code, Markdown, and Raw

Jupyter Notebooks Importing and Exporting Data - What kind of data can you import and work with in a Jupyter Notebook? ----------------
Excel files. XML files. Data from an API. 

Numpy Introduction A - Why is Numpy an important, but unpopular Python library? - -----------------------------------------------------
Often you won't work directly with Numpy.

Numpy Introduction B - About how much memory does the integer 5 consume in plain Python? ----------------------------------------------
20 bytes

Numpy Arrays - What will the following code print out? --------------------------------------------------------------------------------
    A = np.array([
        ['a', 'b', 'c'],
        ['d', 'e', 'f'],
        ['g', 'h', 'i']
    ])

    print(A[:, :2])

[['a' 'b']
['d' 'e']
['g' 'h']]

Numpy Operations - What is the value of a after you run the following code? ----------------------------------------------------------
    a = np.arange(5)
    a + 20

[0, 1, 2, 3, 4]

Numpy Boolean Arrays - What will the following code print out? -----------------------------------------------------------------------
    a = np.arange(5)

    print(a <= 3)

[True, True, True, True, False]

Numpy Algebra and Size - What is the relationship between size of objects (such as lists and datatypes) in memory in Python's standard library and the NumPy library? Knowing this, what are the implications for performance? -------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------
Standard Python objects take up more memory than NumPy objects; operations on NumPy objects complete very quickly compared to comparable objects in standard Python.



Pandas Introduction - What will the following code print out? -----------------------------------------------------------------------
    import pandas as pd

    certificates_earned = pd.Series(
        [8, 2, 5, 6],
        index=['Tom', 'Kris', 'Ahmad', 'Beau']
    )

    print(certificates_earned)

Tom      8
Kris     2
Ahmad    5
Beau     6
dtype: int64

Pandas Indexing and Conditional Selection - What will the following code print out? ----------------------------------------------
    import pandas as pd

    certificates_earned = pd.Series(
        [8, 2, 5, 6],
        index=['Tom', 'Kris', 'Ahmad', 'Beau']
    )

    print(certificates_earned[certificates_earned > 5])

Tom      8
Beau     6
dtype: int64

Pandas DataFrames - What will the following code print out? ----------------------------------------------------------------------
    import pandas as pd

    certificates_earned = pd.DataFrame({
        'Certificates': [8, 2, 5, 6],
        'Time (in months)': [16, 5, 9, 12]
    })

    certificates_earned.index = ['Tom', 'Kris', 'Ahmad', 'Beau']

    print(certificates_earned.iloc[2])

Certificates        5
Time (in months)    9
Name: Ahmad, dtype: int64

Pandas Conditional Selection and Modifying DataFrames - What will the following code print out? - -------------------------------
    import pandas as pd

    certificates_earned = pd.DataFrame({
        'Certificates': [8, 2, 5, 6],
        'Time (in months)': [16, 5, 9, 12]
    })
    names = ['Tom', 'Kris', 'Ahmad', 'Beau']

    certificates_earned.index = names
    longest_streak = pd.Series([13, 11, 9, 7], index=names)
    certificates_earned['Longest streak'] = longest_streak

    print(certificates_earned)




