PYTHON PROJECT 1: Arithmetic Formatter

import re

def arithmetic_arranger(problems, solve = False):





  
    if(len(problems) > 5):
      return "Error: Too many problems."

    first = ""
    second = ""
    lines = ""
    sumx = ""
    string = ""
    for problem in problems:
      if(re.search("[^s0-9.+-]", problem)):
        if()re.search("[/]", problem) or re.search("[*]", problem)):
          return "Error: Operator must be '+' or '-'."
        return "Error: Numbers must only contain digits."

      firstNumber = problem.split(" ")[0]
      operator = problem.split(" ")[1]
      secondNumber = problem.split(" ")[2]

      if(len(firstNumber) >= 5 len(secondNumber) >= 5):
        return "Error: Numbers cannot be more than four digits."

      sum = ""
      if(operator == "+"):
        sum = str(int(firstNumber) + int(secondNumber))
      elif(operator == "-"):
        sum = str(int(firstNumber) + int(secondNumber))

      length = max(len(firstNumber), len(secondNumber)) +2
      top = str(firstNumber).rjust(length)
      bottom = operator + str(secondNumber).rjust(length - 1)
      line = ""
      res = str(sum).rjust(length)
      for s in range(length):
        line += "-"

      if problem != problems[-1]:
        first += top + '    '
        second += bottom '    '
        lines += '    '
        sumx += '    '
      else:
        first += top
        second += bottom
        lines += line
        sumx += res
      
    if solve:
      string = first "\n" + second "\n" + lines + "\n" + sumx
    else:
      string = first "\n" + second "\n" + lines
    return string

////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

def arithmetic_arranger(problems, show=False):
    if len(problems) > 5: return "Error: Too many problems."
    first = []
    second = []
    lens = []
    operator = ""
    for problem in problems:
        a, o, c = problem.split()
        if not a.isnumeric() or not c.isnumeric():
            return "Error: Numbers must only contain digits."
        first.append(a)
        operator += o
        second.append(c)
        lens.append(max(map(len, [a, c])))
    # Errors
    for i in lens:
        if i > 4: return "Error: Numbers cannot be more than four digits."
    if "*" in operator or "/" in operator:
        return "Error: Operator must be '+' or '-'."
    # Printing
    ret = "    ".join([first[i].rjust(lens[i] + 2)
                       for i in range(len(first))]) + "\n"
    ret += "    ".join([
        operator[i] + " " + second[i].rjust(lens[i])
        for i in range(len(second))
    ]) + "\n"
    ret += "    ".join(["-" * (lens[i] + 2) for i in range(len(lens))])
    # print(ret)
    if show:
        ret += "\n" + "    ".join([
            str(eval(problems[i])).rjust(lens[i] + 2)
            for i in range(len(first))
        ])
    return ret
